This is a basic driver to understand the concept of virtual file system in linux proc_fs 

Before trying this, need to read and understand what is virtual file system

what is proc fs in linux 

check the prof_fs headerfile in git
https://github.com/torvalds/linux/blob/master/include/linux/proc_fs.h#L40

Steps to do
1. Clone  try_proc_read 
2. make 
3. Once make is successful, check the resulted files
      ls 
you can see lot of files , out of that try_proc_read.ko is our kernel driver file
3. clear the kernel messge by writing 
      sudo dmesg -c
4. check lsmod and check whether try_proc_read driver is there. Ideally it should not be there

5. check ls /proc and check whether the driver entry is available or not, it should not be there as we havent loaded the driver yet

6. load the driver to kernel
      sudo insmod try_proc_read.ko
7. if it is success, check the kernel msg with
      sudo dmesg 
8. check whether the driver is actually loaded to the kernel with;
      lsmod
and you must see try_proc_read driver

9. try ls /proc and check whether the driver entry is done ?
	ls /proc
   if its success, you can see hello_driver_proc_read in  /proc
 
10. try to see the type of the proc entry fie and see the response. You can see that the file is empty because its a virtual file only.
	file /proc/hello_driver_proc_entry

11. try to read what is inside the proc_entry and you can see the acknowledgement message.
	cat /proc/hello_driver_proc_read
        Now we are seeing the kernel msg from the kernel space.

12. inorder to read the kernel msg from the user space, run the userspace python app.
    python3 user_space_app.py 

    if everything is good we would be able to see the kernel acknowledgement 
 
13. unload the driver 
      sudo rmmod try_proc_read
14. if its successful, you can see the kernel msg
      sudo dmesg
14. check whether driver is actually unloaded
      lsmod
16. check whether the proc entry is deleted by checking 
	ls /proc





